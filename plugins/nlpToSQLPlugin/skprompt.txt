### SQL SERVER SQL tables, with their properties:
# 
# [DATA].[PBI_ACV_F_BOOKINGS_V](DIVISION, LOB, REGION_NAME, REVENUE_TYPE, SNAPSHOT_DATE, DATA_SOURCE, BOOKING_ID, BOOKING_DATE, SKU_DESCRIPTION, PRODUCT_FAMILY, REGION_CODE, NEW_RENEWAL, END_USER_CUSTOMER_NAME, END_USER_COUNTRY, IMPLIED_TERM, TERM, REVENUE_ACCOUNT, LOCAL_CURRENCY, SHIP_TO_SITE_ID, BILL_TO_SITE_ID, BOOKING_AMOUNT_LOCAL, BOOKING_AMOUNT_USD, ACV_LOCAL, ACV_USD, B2RC_ACV_LOCAL, B2RC_ACV_USD, UNIQUE_IDENTIFIER, SALESREP_NAME, VP, FY_QT_YEAR)
# [DATA].[D_PRODUCT_FAMILY_AI](PRODUCT_FAMILY, LOB, PROD_GEN5, PROD_GEN6, PROD_GEN7, PROD_GEN8, DIVISION, BUSINESS_UNITS, ALL_BUS_SEGMENTS, PROD_FAMILY_DESC)
# [STAGE].[EDW_MS_R_DATE_DIM](DATE_KEY, DAY_OF_MONTH, DAY_OF_QUARTER, DAY_OF_WEEK_MON_SUN, DAY_OF_WEEK_SUN_SAT, DAY_OF_YEAR, MONTH_NAME, FISCAL_MONTH_OF_QUARTER, MONTH_YEAR, FISCAL_QUARTER, FISCAL_QUARTERYEAR, FISCAL_WEEK_MON_SUN, FISCAL_WEEK_MON_SUN_OF_QTR, FISCAL_WEEK_MON_SUNYEAR, FISCAL_WEEK_SUN_SAT, FISCAL_WEEK_SUN_SAT_OF_QTR, FISCAL_WEEK_SUN_SAT_YEAR, YEAR, CALENDAR_QUARTER, CALENDAR_QUARTERYEAR, DAY_OF_QUARTER_NUMERIC, DAY_OF_MONTH_NUMERIC, DAY_OF_YEAR_NUMERIC, MONTH_YEAR_NUMERIC, FISCAL_YR_QTR, FISCAL_WK_NUM, ROLLING_DAY, ROLLING_MONTHS, ROLLING_QTR, ROLLING_YR, ETL_CREATED_BY, ETL_CREATED_DATE, ETL_UPDATE_BY, ETL_UPDATE_DATE) 
# [DATA].[D_REGION](REGION_CODE, REGION_NAME, PARENT_REGION_CODE, PARENT_REGION_NAME)
# [DATA].[D_CUSTOMER_DIM](SITE_ID, ADDRESS1, ADDRESS2, ADDRESS3, CITY, STATE, COUNTY, COUNTRY, PROVINCE, POSTAL_CODE, CUSTOMER_NAME, CUSTOMER_NUMBER, CUSTOMER_TYPE, GLOBAL_CUSTOMER_ID, GLOBAL_CUSTOMER_NAME, DUNS_NUMBER, HIMSS_ID, HIMSS_NAME, HIMSS_PARENT_ID, HIMSS_PARENT_NAME, REGION, SUB_REGION, CATEGORY_CODE, FACILITY_TYPE, ORACLE_ACCOUNT_ID, SITE_NUMBER, MASTER_ACCOUNT_ID, CUST_ACCT_SITE_ID, BILL_TO_INDUSTRY, CUSTOMER_KEY, CUSTOMER_GEO, HIMSS_CUSTOMER_ID_XREF, SITE_USE, CUST_ACCOUNT_ID)
# [DATA].[D_SALES_REP_HIERARCHY](TIER_1_USER_NAME, TIER_1_USER_ID, TIER_1_ROLE_ID, TIER_1_ROLE_NAME, TIER_1_ROLE_USER_CONCAT,TIER_2_USER_NAME, TIER_2_USER_ID, TIER_2_ROLE_ID, TIER_2_ROLE_NAME, TIER_2_ROLE_USER_CONCAT,TIER_3_USER_NAME, TIER_3_USER_ID, TIER_3_ROLE_ID, TIER_3_ROLE_NAME, TIER_3_ROLE_USER_CONCAT,TIER_4_USER_NAME, TIER_4_USER_ID, TIER_4_ROLE_ID, TIER_4_ROLE_NAME, TIER_4_ROLE_USER_CONCAT,TIER_5_USER_NAME, TIER_5_USER_ID, TIER_5_ROLE_ID, TIER_5_ROLE_NAME, TIER_5_ROLE_USER_CONCAT,TIER_6_USER_NAME, TIER_6_USER_ID, TIER_6_ROLE_ID, TIER_6_ROLE_NAME, TIER_6_ROLE_USER_CONCAT,TIER_7_USER_NAME, TIER_7_USER_ID, TIER_7_ROLE_ID, TIER_7_ROLE_NAME, TIER_7_ROLE_USER_CONCAT,TIER_8_USER_NAME, TIER_8_USER_ID, TIER_8_ROLE_ID, TIER_8_ROLE_NAME, TIER_8_ROLE_USER_CONCAT,TIER_9_USER_NAME, TIER_9_USER_ID, TIER_9_ROLE_ID, TIER_9_ROLE_NAME, TIER_9_ROLE_USER_CONCAT,TIER_10_USER_NAME, TIER_10_USER_ID, TIER_10_ROLE_ID, TIER_10_ROLE_NAME, TIER_10_ROLE_USER_CONCAT,TIER_11_USER_NAME, TIER_11_USER_ID, TIER_11_ROLE_ID, TIER_11_ROLE_NAME, TIER_11_ROLE_USER_CONCAT,TIER_12_USER_NAME, TIER_12_USER_ID, TIER_12_ROLE_ID, TIER_12_ROLE_NAME, TIER_12_ROLE_USER_CONCAT,TIER_13_USER_NAME, TIER_13_USER_ID, TIER_13_ROLE_ID, TIER_13_ROLE_NAME, TIER_13_ROLE_USER_CONCAT,TIER_14_USER_NAME, TIER_14_USER_ID, TIER_14_ROLE_ID, TIER_14_ROLE_NAME, TIER_14_ROLE_USER_CONCAT,TIER_15_USER_NAME, TIER_15_USER_ID, TIER_15_ROLE_ID, TIER_15_ROLE_NAME, TIER_15_ROLE_USER_CONCAT,TIER_16_USER_NAME, TIER_16_USER_ID, TIER_16_ROLE_ID, TIER_16_ROLE_NAME, TIER_16_ROLE_USER_CONCAT,TIER_17_USER_NAME, TIER_17_USER_ID, TIER_17_ROLE_ID, TIER_17_ROLE_NAME, TIER_17_ROLE_USER_CONCAT,TIER_18_USER_NAME, TIER_18_USER_ID, TIER_18_ROLE_ID, TIER_18_ROLE_NAME, TIER_18_ROLE_USER_CONCAT,TIER_19_USER_NAME, TIER_19_USER_ID, TIER_19_ROLE_ID, TIER_19_ROLE_NAME, TIER_19_ROLE_USER_CONCAT,TIER_20_USER_NAME, TIER_20_USER_ID, TIER_20_ROLE_ID, TIER_20_ROLE_NAME, TIER_20_ROLE_USER_CONCAT,TIER_1_USER_TIER, EMAIL_ADDRESS)
# [DATA].[F_BOOKINGS](COMPANY, TRX_LINE, COMMISSIONS_ID, ACCRL_PER_DATE, DATA_SOURCE, BOOKING_ID, VERSION, END_USER_CUSTOMER_NAME, END_USER_COUNTRY, END_USER_REGION, ORDER_TYPE, CUSTOMER_PO_NUMBER, NEW_RENEWAL_MAINTENANCE, MAINTENANCE_RENEWAL_STATUS, METERED_SERVICE_TYPE, CAST(BOOKINGS_AMOUNT_LOCAL AS FLOAT), CAST(BOOKING_AMOUNT_USD AS FLOAT), BOOKINGS_UNITS, SKU, SKU_DESCRIPTION, PRODUCT_FAMILY_NAME, PRODUCT_FAMILY_DESCRIPTION, REVENUE_TYPE, SHIP_TO_CUSTOMER, SHIP_TO_CUSTOMER_REGION, BILL_TO_CUSTOMER, BOOKING_DATE, LOCAL_CURRENCY, EMAIL_ADDRESS, REGION_CODE, DEAL_TERM_ACTIVATION, DEAL_TERM_EXPIRATION, CUSTOMER_SIGNATURE_DATE, SUPPLIER_SIGNATURE_DATE, SOLD_TO_CUSTOMER_ID, SALES_CHANNEL, END_CUSTOMER_ID, RESELLER_NAME, BILL_TO_DEPT_CODE, BILL_TO_DEPT_NAME, ORG_NAME, TERM, MASTER_DOC_ID, RENEWAL_REFERENCE_BSA, IMPLIED_TERM, OVERRIDE_FLAG, CAST(ACV_LOCAL AS FLOAT), CAST(ACV_USD AS FLOAT), CAST(B2RC_ACV_LOCAL AS FLOAT), CAST(B2RC_ACV_USD AS FLOAT), RCID, REFERENCE_PROJECT_NUMBER)
# [DATA].[F_PURCHASED_PRODUCT_FACT](SOURCE,	TRANSACTION_ID,	TRANSACTION_NUMBER,	TRANSACTION_STATUS,	LINE_ID, ORG_ID, LINE_NUMBER, RECORD_TYPE, BILL_TO_CUST_SITE_ID, SHIP_TO_CUST_SITE_ID, SOLD_TO_CUST_ACCOUNT_ID,	OWNER_PARTY_SITE_ID, INSTALLED_AT_CUST_SITE_ID,	END_USER_NAME, END_USER_COUNTRY, RESELLER_CUST_NAME, TRANSACTION_DATE, SALESPERSON_NAME, REVENUE_ACCOUNT, INVENTORY_ITEM_ID, SKU, PRODUCT_FAMILY_NO, PRODUCT_FAMILY_NAME, QUANTITY,	UOM, QUANTITY_SHIPPED, FUNCTIONAL_CURRENCY,	TRANSACTIONAL_CURRENCY,	USP_TRANSACT_CURR, USP_FUNC_CURR, USP_USD, LINE_TOTAL_TRANSAC_CURR,	LINE_TOTAL_FUNC_CURR, LINE_TOTAL_USD, EXTRACTION_DATE, CHANGED_FLAG, CREATED_BY, CREATION_DATE,	LAST_UPDATE_DATE, LAST_UPDATED_BY, SKU_DESCRIPTION,	LICENSE_COUNT, PA_PROJECT_NUMBER, SERVICE_START_DATE, SERVICE_END_DATE,	DURATION, EXTENDED_LIST_PRICE, TOTAL_LICENSE_COUNT,	NMS_ORG_ID,	ORDER_DATE,	BOOKED_DATE, ORDER_TYPE)
# [DATA.D_REVENUE_TYPE](REVENUE_ACCOUNT, REVENUE_ACCOUNT_NAME, ACCOUNT_ROLLUP1, ACCOUNT_ROLLUP2)

# If there is any amount value please round it to two decimals, with currency code
# while comparing string values use uppercase along with LIKE  condition
# while working with Aggregate function use group by clause along with order by condition.
# month column is stored in MON format in uppercase
# Consider July Aug Sep as a Q1
# Input may consist of Pie Chart or Bar Chart, please excluded this command.
# [DATA].[D_REGION] table contains all the regions 
# [DATA].[D_PRODUCT_FAMILY_AI] table contains all product familes
# [DATA].[PBI_ACV_F_BOOKINGS_V] table contains Booking amount, ACV, B2RC_ACV in local currency and USD.
# [STAGE].[EDW_MS_R_DATE_DIM] table is date dimension which contains Quarter , year , day, dateKey details.
# Use ROUND function for all aggregate functions (e.g., SUM, AVG). Example: ROUND(SUM(column_name), 2).
# Consider example to calculate fiscal year as below 
# Lets say current fiscal year is 2024 then should be starts from JUL 2023 to JUN 2024 or else fiscal_yr_qtr should be in 2024-Q1,2024-Q2,2024-Q3,2024-Q4.
# If there is any fiscal year then please consider EDW_MS_R_DATE_DIM.FISCAL_YR_QTR column and all quarters for that year

# Below are the relation between the tables relation are provided  like table.column
# PBI_ACV_F_BOOKINGS_V.PRODUCT_FAMILY  =  D_PRODUCT_FAMILY_AI.PRODUCT_FAMILY
# PBI_ACV_F_BOOKINGS_V.BOOKING_DATE    =  EDW_MS_R_DATE_DIM.DATE_KEY
# PBI_ACV_F_BOOKINGS_V.REGION_CODE     =  D_REGION.REGION_CODE
# PBI_ACV_F_BOOKINGS_V.SHIP_TO_SITE_ID =  D_CUSTOMER_DIM.SITE_ID
# F_BOOKINGS.EMAIL_ADDRESS             =  D_SALES_REP_HIERARCHY.EMAIL_ADDRESS
# F_BOOKINGS.BOOKING_DATE              =  EDW_MS_R_DATE_DIM.DATE_KEY
# F_PURCHASED_PRODUCT_FACT.REVENUE_ACCOUNT = D_REVENUE_TYPE.REVENUE_ACCOUNT


### A SQL query to find {{$input}}. Please provide only one SQL query and nothing else in a single string. Do not prompt anything else apart from the sql query.

User: can i get the booking amount of FY23Q2? 
Assistant: SELECT ROUND(SUM(BOOKING_AMOUNT_LOCAL), 2) AS BookingAmount FROM DATA.PBI_ACV_F_BOOKINGS_V JOIN STAGE.EDW_MS_R_DATE_DIM ON PBI_ACV_F_BOOKINGS_V.BOOKING_DATE = EDW_MS_R_DATE_DIM.DATE_KEY WHERE EDW_MS_R_DATE_DIM.YEAR = '2023' AND EDW_MS_R_DATE_DIM.FISCAL_QUARTER = 'Q2';
User: Can I get the total booking amount in local currency?
Assistant: SELECT ROUND(SUM(BOOKING_AMOUNT_LOCAL),2) AS BookingAmount, LOCAL_CURRENCY AS CurrencyCode FROM DATA.PBI_ACV_F_BOOKINGS_V group by LOCAL_CURRENCY;
User: Can I get the total ACV in USD for all the product families in fiscal year 2022?
Assistant : SELECT ROUND(SUM(ACV_USD), 2) AS TotalACV FROM DATA.PBI_ACV_F_BOOKINGS_V JOIN STAGE.EDW_MS_R_DATE_DIM ON PBI_ACV_F_BOOKINGS_V.BOOKING_DATE = EDW_MS_R_DATE_DIM.DATE_KEY JOIN DATA.D_PRODUCT_FAMILY_AI ON PBI_ACV_F_BOOKINGS_V.PRODUCT_FAMILY = D_PRODUCT_FAMILY_AI.PRODUCT_FAMILY  WHERE  EDW_MS_R_DATE_DIM.FISCAL_YR_QTR IN ('2022-Q1','2022-Q2','2022-Q3','2022-Q4');
User: Give me total Bookings with TIER_1_USER_NAME for Quarter 2 of year 2023.
Assistant: select tier_1_user_name,sum(BOOKINGS_AMOUNT_LOCAL) as Booking_Amount_Local
from DATA.F_BOOKINGS join DATA.D_SALES_REP_HIERARCHY
on F_BOOKINGS.email_address = D_SALES_REP_HIERARCHY.email_address
lEFT join [STAGE].[EDW_MS_R_DATE_DIM]
on F_BOOKINGS.BOOKING_DATE = [EDW_MS_R_DATE_DIM].DATE_KEY
WHERE EDW_MS_R_DATE_DIM.FISCAL_QUARTERYEAR = 'Q2/2023'
group by tier_1_user_name;
User: give me total of transactions where Salesperson is 'No Sales Credit'
Assistant: 
select SALESPERSON_NAME,sum(USP_TRANSACT_CURR) as Total_Transaction_Amount
from [DATA].[F_PURCHASED_PRODUCT_FACT] where SALESPERSON_NAME = 'No Sales Credit'
group by SALESPERSON_NAME
order by Total_Transaction_Amount desc;
User: give me total of transactions where Salesperson is 'No Sales Credit' and Revenue Account is '463109'
Assistant: 
select b.REVENUE_ACCOUNT,SALESPERSON_NAME,sum(USP_TRANSACT_CURR) as Total_Transaction_Amount
from [DATA].[F_PURCHASED_PRODUCT_FACT] a left join DATA.D_REVENUE_TYPE b
on a.REVENUE_ACCOUNT = b.REVENUE_ACCOUNT
where SALESPERSON_NAME = 'No Sales Credit'
group by b.REVENUE_ACCOUNT,SALESPERSON_NAME
order by Total_Transaction_Amount desc;
User: {{$input}}
Assistant: